1. 可以给类的非静态的属性（即实例变量）赋值的位置有：
    1）默认初始化
    2）显式初始化
    3）构造器初始化
    5）代码块中初始化
    4）有了对象以后，通过“对象.属性"或"对象.方法"的方式进行赋值

2. 执行的先后顺序
    1）-> 2）和5）同级别下按先后顺序执行 -> 3）-> 4）

3. 关于字节码文件中的<init>的简单说明。（通过jclasslib bytecode viewer查看）
    > <init>方法在字节码文件中可以看到。每个<init>方法都对应着一个类的构造器。（类中
        声明了几个构造器就会有几个<init>）
    > 编写的代码中的构造器在编译以后就会以<init>方法的方式呈现
    > <init>方法内部的代码包含了实例变量的显示赋值、代码块中的赋值和构造器中的代码。
    > <init>方法用来初始化当前创建的对象的信息的。

4. 给实例变量赋值的位置很多，开发中如何选择？
    > 显式赋值：比较适合于每个对象的属性值相同的场景；
    > 构造器赋值：比较适合于每个对象的属性值不同的场景；
    >
    >

Java程序初始化工作可以在许多不同的代码块中来完成（例如静态代码块、构造函罗
等)，它们执行的顺序如下：父类静态变量、父类静态代码块、子类静态变量、子类静态代码
块、父类非静态变量、父类非静态代码块、父类构造函数、子类非静态变量、子类非静态个
块、子类构造函数。