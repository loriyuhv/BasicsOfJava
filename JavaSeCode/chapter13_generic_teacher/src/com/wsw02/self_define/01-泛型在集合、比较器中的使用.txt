1. 自定义泛型类\接口

1.1 格式
1) 泛型类
    class A<T> {;}
2) 泛型接口
    interface B<T, E> {;}

1.2 使用说明
1）我们在声明完自定义泛型类以后，可以在类的内部（比如：属性、方法、构造器中）使用
    类的泛型。
    对应com.wsw02.self_define.GenericTest.java中test1()

2）我们在创建自定义泛型类的对象时，可以指明泛型参数类型。一旦指明，内部凡是使用类
    的泛型参数的位置，都具体化为指定的类的泛型类型。
    对应com.wsw02.self_define.GenericTest.java中test2()

3）如果在创建自定义泛型类的对象时，没有指明泛型参数类型，那么泛型将被擦除，泛型对应
    的类型均按照Object处理，但不等价于Object。
    > 经验：泛型要么使用一路都用。要么不使用，一路都不要用。
    对应com.wsw02.self_define.GenericTest.java中test3()

4）泛型的指定中必须使用引用数据类型。不能使用基本数据类型，此时只能使用包装类替换。
   对应com.wsw02.self_define.GenericTest.java中test4()

5）除创建泛型类对象外，子类继承泛型类时、实现类实现泛型接口时，也可以确定泛型结构中
    的泛型参数。
    对应com.wsw02.self_define.GenericTest.java中test6()
    > 如果我们在给泛型类提供子类时，子类也不确定泛型的类型，则可以继续使用泛型参数。

    对应com.wsw02.self_define.GenericTest.java中test7()
    对应com.wsw02.self_define.GenericTest.java中test8()
    > 我们还可以在现有的父类的泛型参数的基础上，新增泛型参数。
    对应com.wsw02.self_define.GenericTest.java中test9()
    对应com.wsw02.self_define.GenericTest.java中test10()
    对应com.wsw02.self_define.GenericTest.java中test11()
    对应com.wsw02.self_define.GenericTest.java中test12()

1.3 注意
1) 泛型类可能有多个参数，此时应将多个参数一起放在尖括号内。比如：<E1,E2,E3>
2) JDK7.0 开始，泛型的简化操作：ArrayList<Fruit> list = new ArrayList<>();
3) 如果泛型结构是一个接口或抽象类，则不可创建泛型类的对象。
4) 不能使用new E[]。但是可以：E[] elements = (E[])new Object[capacity];
    参考：ArrayList源码中声明：Object[] elementData，而非泛型参数类型数组。
5) 在类/接口上声明的泛型，在本类或本接口中即代表某种类型，但不可以在静态方法
    中使用类的泛型。
6) 异常类不能是带泛型的。

2. 自定义泛型方法
2.1 问题：在泛型方法中，使用了类的泛型参数。那么此方法是泛型方法吗？
答：不是泛型方法

2.2 格式
权限修饰符 <T> 返回值类型 方法名(形参列表) { // 通常在形参列表或返回值类型的位置出现泛型T

}

2.3 举例
public <G> G method(G g) {
    return null;
}

2.4 说明
> 声明泛型方法时，一定要添加泛型参数<T>。
> 泛型参数在方法调用时，指明其具体的类型。
> 泛型方法可以根据需要声明为static。
> 泛型方法所属于的类是否是一个泛型类，都可以。